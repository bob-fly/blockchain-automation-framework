---
# This is a sample configuration file for SupplyChain App on Single K8s Cluster.
# For multiple K8s clusters, there should be multiple configuration files.
network:
  # Network level configuration specifies the attributes required for each organization
  # to join an existing network.
  type: fabric
  version: 1.4.4
  #enabled flag is frontend is enabled for peers
  frontend: enabled

  local:
    hyperledger_fabric:
      configtxgen:
        installPackage: /Users/sibo/Documents/programming/tools/baf/tar/hyperledger-fabric-darwin-amd64-1.4.4.tar.gz

  #Environment section for Kubernetes setup
  env:
    type: demo-fabric               # tag for the environment. Important to run multiple flux on single cluster
    proxy: none                  # values can be 'haproxy' or 'ambassador'
    ambassadorPorts:                # Any additional Ambassador ports can be given here, this is valid only if proxy='ambassador'
      portRange:              # For a range of ports 
        from: 15010 
        to: 15020
    # ports: 15020,15021      # For specific ports
    retry_count: 40                 # Retry count for the checks
    external_dns: disabled           # Should be enabled if using external-dns for automatic route configuration
  
  # Docker registry details where images are stored. This will be used to create k8s secrets
  # Please ensure all required images are built and stored in this registry. 
  # Do not check-in docker_password.
  docker:
    url: "reg.hrlyit.com/hyperledgerlabs"
    username: "fengsibo"
    password: "1234QWer"
  
  # Remote connection information for orderer (will be blank or removed for hosting organization)
  orderers:
    - orderer:
      type: orderer
      name: orderer
      org_name: supplychain
      uri: orderer.supplychain-net:7050
      certificate: /Users/sibo/Documents/programming/tools/baf/blockchain-automation-framework/examples/supplychain-app/configuration/samples/file1.cert
  
  # The channels defined for a network with participating peers in each channel
  channels:
  - channel:
    consortium: SupplyChainConsortium
    channel_name: AllChannel
    orderer: 
      name: supplychain
    participants:
    - organization:
      name: carrier
      type: creator
      org_status: new
      peers:
      - peer:
        name: peer0
        type: validating
        gossipAddress: peer0.carrier-net:7051
      ordererAddress: orderer.supplychain-net:7050
    - organization:      
      name: store
      type: joiner
      org_status: new
      peers:
      - peer:
        name: peer0
        type: validating
        gossipAddress: peer0.store-net:7051
      ordererAddress: orderer.supplychain-net:7050
    - organization:
      name: warehouse
      type: joiner
      org_status: new
      peers:
      - peer:
        name: peer0
        type: validating
        gossipAddress: peer0.warehouse-net:7051
      ordererAddress: orderer.supplychain-net:7050
    - organization:
      name: manufacturer
      type: joiner
      org_status: new
      peers:
      - peer:
        name: peer0
        type: validating
        gossipAddress: peer0.manufacturer-net:7051
      ordererAddress: orderer.supplychain-net:7050
    genesis:
      name: OrdererGenesis  

  # Allows specification of one or many organizations that will be connecting to a network.
  # If an organization is also hosting the root of the network (e.g. doorman, membership service, etc),
  # then these services should be listed in this section as well.
  organizations:

    # Specification for the 1st organization. Each organization maps to a VPC and a separate k8s cluster
    - organization:
      name: supplychain
      country: UK
      state: London
      location: London
      subject: "O=Orderer,L=51.50/-0.13/London,C=GB"
      type: orderer
      org_status: new
      external_url_suffix: org1ambassador.blockchaincloudpoc.com
      ca_data:
        url: ca.supplychain-net:7054
        certificate: file/server.crt 
  
      cloud_provider: fuseim   # Options: aws, azure, gcp
      aws:
        access_key: "aws_access_key"        # AWS Access key, only used when cloud_provider=aws
        secret_key: "aws_secret_key"        # AWS Secret key, only used when cloud_provider=aws
  
      # Kubernetes cluster deployment variables. The config file path and name has to be provided in case
      # the cluster has already been created.
      k8s:
        region: "docker-desktop"
        context: "docker-desktop"
        config_file: "/Users/sibo/Documents/programming/tools/baf/blockchain-automation-framework/build/config"

      # Hashicorp Vault server address and root-token. Vault should be unsealed.
      # Do not check-in root_token
      vault:
        url: "http://sibo.local:8200"
        root_token: "s.gsHeLtht5CYP9sWSoXzTPDc8"

      # Git Repo details which will be used by GitOps/Flux.
      # Do not check-in git_password
      gitops:
        git_protocol: "ssh" # Option for git over https or ssh
        git_url: "ssh://git@github.com/bob-fly/blockchain-automation-framework.git"         # Gitops https or ssh url for flux value files
        branch: "test"           # Git branch where release is being made
        release_dir: "platforms/hyperledger-fabric/releases/dev" # Relative Path in the Git repo for flux sync per environment.
        chart_source: "platforms/hyperledger-fabric/charts"     # Relative Path where the Helm charts are stored in Git repo
        git_repo: "github.com/bob-fly/blockchain-automation-framework.git"   # Gitops git repository URL for git push  (without https://)
        username: "bob-fly"          # Git Service user who has rights to check-in in all branches
        password: "19889012fsb"          # Git Server user password/token (Optional for ssh; Required for https)
        email: "sibo_feng@126.com"                # Email to use in git config
        private_key: "/Users/sibo/Documents/programming/tools/baf/git/gitops"          # Path to private key file which has write-access to the git repo (Optional for https; Required for ssh)

      #Optional for infrastructure configuration files.
      infrastructure:
        target_state: "present"  # Options: present, absent, planned            
        refresh_inventory: yes  

        
      # Services maps to the pods that will be deployed on the k8s cluster
      # This sample is an orderer service and includes a zk-kafka consensus
      services:
        ca:
          name: ca
          subject: "/C=GB/ST=London/L=London/O=Orderer/CN=ca.supplychain-net"
          type: ca
          grpc:
            port: 7054
        
        consensus:
          name: raft
          type: etcdraft
          replicas: 3
          grpc:
            port: 9092
                
#        orderer:
#          name: orderer
#          type: orderer
#          consensus: raft
#          grpc:
#            port: 7050
        orderers:
          # This sample has multiple orderers as an example.
          # You can use a single orderer for most production implementations.
          - orderer:
            name: orderer
            type: orderer
            consensus: raft
            grpc:
              port: 7050


    # Specification for the 2nd organization. Each organization maps to a VPC and a separate k8s cluster
    - organization:
      name: manufacturer
      country: CH
      state: Zurich
      location: Zurich
      subject: "O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH"
      type: peer
      org_status: new
      external_url_suffix: org2ambassador.blockchaincloudpoc.com
      ca_data:
        url: ca.manufacturer-net:7054
        certificate: file/server.crt

      cloud_provider: fuseim   # Options: aws, azure, gcp
  
      # Kubernetes cluster deployment variables. The config file path and name has to be provided in case
      # the cluster has already been created.
      k8s:
        region: "docker-desktop"
        context: "docker-desktop"
        config_file: "/Users/sibo/Documents/programming/tools/baf/blockchain-automation-framework/build/config"

      # Hashicorp Vault server address and root-token. Vault should be unsealed.
      # Do not check-in root_token
      vault:
        url: "http://sibo.local:8200"
        root_token: "s.gsHeLtht5CYP9sWSoXzTPDc8"
        secret_path: "secret"

      # Git Repo details which will be used by GitOps/Flux.
      # Do not check-in git_password
      gitops:
        git_protocol: "ssh" # Option for git over https or ssh
        git_url: "ssh://git@github.com/bob-fly/blockchain-automation-framework.git"         # Gitops https or ssh url for flux value files
        branch: "test"           # Git branch where release is being made
        release_dir: "platforms/hyperledger-fabric/releases/dev" # Relative Path in the Git repo for flux sync per environment.
        chart_source: "platforms/hyperledger-fabric/charts"     # Relative Path where the Helm charts are stored in Git repo
        git_repo: "github.com/bob-fly/blockchain-automation-framework.git"   # Gitops git repository URL for git push  (without https://)
        username: "bob-fly"          # Git Service user who has rights to check-in in all branches
        password: "19889012fsb"          # Git Server user password/token (Optional for ssh; Required for https)
        email: "sibo_feng@126.com"                # Email to use in git config
        private_key: "/Users/sibo/Documents/programming/tools/baf/git/gitops"          # Path to private key file which has write-access to the git repo (Optional for https; Required for ssh)

      #Optional for infrastructure configuration files.
      infrastructure:
        target_state: "present"  # Options: present, absent, planned            
        refresh_inventory: yes
        
      # The participating nodes are peers
      # This organization hosts it's own CA server 
      services:
        ca:
          name: ca
          subject: "/C=CH/ST=Zurich/L=Zurich/O=Manufacturer/CN=ca.manufacturer-net"
          type: ca
          grpc:
            port: 7054
        peers:
        - peer:
          name: peer0          
          type: peer          
          gossippeeraddress: peer0.manufacturer-net:7051
          grpc:
            port: 7051         
          events:
            port: 7053
          couchdb:
            port: 5984
          restserver:           # This is for the rest-api server
            targetPort: 20001
            port: 20001 
          expressapi:           # This is for the express api server
            targetPort: 3000
            port: 3000
          frontend:
            targetPort: 80
            port: 8080
          chaincode:
            name: "supplychain"
            version: "v1"
            maindirectory: "supplychain/cmd"
            repository:
              username: "bob-fly"          # Git Service user who has rights to check-in in all branches
              password: "19889012fsb"
              url: "github.com/hyperledger-labs/blockchain-automation-framework.git"
              branch: test
              path: "examples/supplychain-app/fabric/chaincode_rest_server/chaincode/"
            arguments: '\"init\",\"\"'
            endorsements: ""
      #variables for frontend application
      app:
        google_maps_api: "gmaps_key"

    - organization:
      name: carrier
      country: GB
      state: London
      location: London
      subject: "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB"
      type: peer
      org_status: new
      external_url_suffix: org3ambassador.blockchaincloudpoc.com
      ca_data:
        url: ca.carrier-net:7054
        certificate: file/server.crt
      
      cloud_provider: fuseim   # Options: aws, azure, gcp
      aws:
        access_key: "aws_access_key"        # AWS Access key, only used when cloud_provider=aws
        secret_key: "aws_secret_key"        # AWS Secret key, only used when cloud_provider=aws
  
      # Kubernetes cluster deployment variables. The config file path and name has to be provided in case
      # the cluster has already been created.
      k8s:
        region: "docker-desktop"
        context: "docker-desktop"
        config_file: "/Users/sibo/Documents/programming/tools/baf/blockchain-automation-framework/build/config"

      # Hashicorp Vault server address and root-token. Vault should be unsealed.
      # Do not check-in root_token
      vault:
        url: "http://sibo.local:8200"
        root_token: "s.gsHeLtht5CYP9sWSoXzTPDc8"
        secret_path: "secret"

      # Git Repo details which will be used by GitOps/Flux.
      # Do not check-in git_password
      gitops:
        git_protocol: "ssh" # Option for git over https or ssh
        git_url: "ssh://git@github.com/bob-fly/blockchain-automation-framework.git"         # Gitops https or ssh url for flux value files
        branch: "test"           # Git branch where release is being made
        release_dir: "platforms/hyperledger-fabric/releases/dev" # Relative Path in the Git repo for flux sync per environment.
        chart_source: "platforms/hyperledger-fabric/charts"     # Relative Path where the Helm charts are stored in Git repo
        git_repo: "github.com/bob-fly/blockchain-automation-framework.git"   # Gitops git repository URL for git push  (without https://)
        username: "bob-fly"          # Git Service user who has rights to check-in in all branches
        password: "19889012fsb"          # Git Server user password/token (Optional for ssh; Required for https)
        email: "sibo_feng@126.com"                # Email to use in git config
        private_key: "/Users/sibo/Documents/programming/tools/baf/git/gitops"          # Path to private key file which has write-access to the git repo (Optional for https; Required for ssh)

      #Optional for infrastructure configuration files.
      infrastructure:
        target_state: "present"  # Options: present, absent, planned            
        refresh_inventory: yes  
    
      services:
        ca:
          name: ca
          subject: "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net"
          type: ca
          grpc:
            port: 7054
        peers:
        - peer:
          name: peer0          
          type: peer
          gossippeeraddress: peer0.carrier-net:7051
          grpc:
            port: 7051         
          events:
            port: 7053
          couchdb:
            port: 5984
          restserver:
            targetPort: 20001
            port: 20001 
          expressapi:
            targetPort: 3000
            port: 3000
          frontend:
            targetPort: 80
            port: 8080
          chaincode:
            name: "supplychain"
            version: "v1"
            maindirectory: "supplychain/cmd"
            repository:
              username: "bob-fly"          # Git Service user who has rights to check-in in all branches
              password: "19889012fsb"
              url: "github.com/hyperledger-labs/blockchain-automation-framework.git"
              branch: test
              path: "examples/supplychain-app/fabric/chaincode_rest_server/chaincode/"
            arguments: '\"init\",\"\"'
            endorsements: ""
      #variables for frontend application
      app:
        google_maps_api: "gmaps_key"

    - organization:
      name: store
      country: US
      state: New York
      location: New York
      subject: "O=Store,OU=Store,L=40.73/-74/New York,C=US"
      type: peer
      org_status: new
      external_url_suffix: org3ambassador.blockchaincloudpoc.com
      ca_data:
        url: ca.store-net:7054
        certificate: file/server.crt
      
      cloud_provider: fuseim   # Options: aws, azure, gcp
      aws:
        access_key: "aws_access_key"        # AWS Access key, only used when cloud_provider=aws
        secret_key: "aws_secret_key"        # AWS Secret key, only used when cloud_provider=aws
  
      # Kubernetes cluster deployment variables. The config file path and name has to be provided in case
      # the cluster has already been created.
      k8s:
        region: "docker-desktop"
        context: "docker-desktop"
        config_file: "/Users/sibo/Documents/programming/tools/baf/blockchain-automation-framework/build/config"

      # Hashicorp Vault server address and root-token. Vault should be unsealed.
      # Do not check-in root_token
      vault:
        url: "http://sibo.local:8200"
        root_token: "s.gsHeLtht5CYP9sWSoXzTPDc8"
        secret_path: "secret"

      # Git Repo details which will be used by GitOps/Flux.
      # Do not check-in git_password
      gitops:
        git_protocol: "ssh" # Option for git over https or ssh
        git_url: "ssh://git@github.com/bob-fly/blockchain-automation-framework.git"         # Gitops https or ssh url for flux value files
        branch: "test"           # Git branch where release is being made
        release_dir: "platforms/hyperledger-fabric/releases/dev" # Relative Path in the Git repo for flux sync per environment.
        chart_source: "platforms/hyperledger-fabric/charts"     # Relative Path where the Helm charts are stored in Git repo
        git_repo: "github.com/bob-fly/blockchain-automation-framework.git"   # Gitops git repository URL for git push  (without https://)
        username: "bob-fly"          # Git Service user who has rights to check-in in all branches
        password: "19889012fsb"          # Git Server user password/token (Optional for ssh; Required for https)
        email: "sibo_feng@126.com"                # Email to use in git config
        private_key: "/Users/sibo/Documents/programming/tools/baf/git/gitops"          # Path to private key file which has write-access to the git repo (Optional for https; Required for ssh)

      #Optional for infrastructure configuration files.
      infrastructure:
        target_state: "present"  # Options: present, absent, planned            
        refresh_inventory: yes

      services:
        ca:
          name: ca
          subject: "/C=US/ST=New York/L=New York/O=Store/CN=ca.store-net"
          type: ca
          grpc:
            port: 7054
        peers:
        - peer:
          name: peer0          
          type: peer
          gossippeeraddress: peer0.store-net:7051
          grpc:
            port: 7051
          events:
            port: 7053
          couchdb:
            port: 5984
          restserver:
            targetPort: 20001
            port: 20001 
          expressapi:
            targetPort: 3000
            port: 3000
          frontend:
            targetPort: 80
            port: 8080
          chaincode:
            name: "supplychain"
            version: "v1"
            maindirectory: "supplychain/cmd"
            repository:
              username: "bob-fly"          # Git Service user who has rights to check-in in all branches
              password: "19889012fsb"
              url: "github.com/hyperledger-labs/blockchain-automation-framework.git"
              branch: test
              path: "examples/supplychain-app/fabric/chaincode_rest_server/chaincode/"
            arguments: '\"init\",\"\"'
            endorsements: ""
       #variables for frontend application
      app:
        google_maps_api: "gmaps_key"

    - organization:
      name: warehouse
      country: US
      state: Massachusetts
      location: Boston
      subject: "O=Warehouse,OU=Warehouse,L=42.36/-71.06/Boston,C=US"
      type: peer
      org_status: new
      external_url_suffix: org2ambassador.blockchaincloudpoc.com
      ca_data:
        url: ca.warehouse-net:7054
        certificate: file/server.crt
      
      cloud_provider: fuseim   # Options: aws, azure, gcp
      aws:
        access_key: "aws_access_key"        # AWS Access key, only used when cloud_provider=aws
        secret_key: "aws_secret_key"        # AWS Secret key, only used when cloud_provider=aws
  
      # Kubernetes cluster deployment variables. The config file path and name has to be provided in case
      # the cluster has already been created.
      k8s:
        region: "docker-desktop"
        context: "docker-desktop"
        config_file: "/Users/sibo/Documents/programming/tools/baf/blockchain-automation-framework/build/config"

      # Hashicorp Vault server address and root-token. Vault should be unsealed.
      # Do not check-in root_token
      vault:
        url: "http://sibo.local:8200"
        root_token: "s.gsHeLtht5CYP9sWSoXzTPDc8"
        secret_path: "secret"

      # Git Repo details which will be used by GitOps/Flux.
      # Do not check-in git_password
      gitops:
        git_protocol: "ssh" # Option for git over https or ssh
        git_url: "ssh://git@github.com/bob-fly/blockchain-automation-framework.git"         # Gitops https or ssh url for flux value files
        branch: "test"           # Git branch where release is being made
        release_dir: "platforms/hyperledger-fabric/releases/dev" # Relative Path in the Git repo for flux sync per environment.
        chart_source: "platforms/hyperledger-fabric/charts"     # Relative Path where the Helm charts are stored in Git repo
        git_repo: "github.com/bob-fly/blockchain-automation-framework.git"   # Gitops git repository URL for git push  (without https://)
        username: "bob-fly"          # Git Service user who has rights to check-in in all branches
        password: "19889012fsb"          # Git Server user password/token (Optional for ssh; Required for https)
        email: "sibo_feng@126.com"                # Email to use in git config
        private_key: "/Users/sibo/Documents/programming/tools/baf/git/gitops"          # Path to private key file which has write-access to the git repo (Optional for https; Required for ssh)

      #Optional for infrastructure configuration files.
      infrastructure:
        target_state: "present"  # Options: present, absent, planned            
        refresh_inventory: yes 

      services:
        ca:
          name: ca
          subject: "/C=US/ST=Massachusetts/L=Boston/O=Warehouse/CN=ca.warehouse-net"
          type: ca
          grpc:
            port: 7054
        peers:
        - peer:
          name: peer0          
          type: peer
          gossippeeraddress: peer0.warehouse-net:7051
          grpc:
            port: 7051       
          events:
            port: 7053
          couchdb:
            port: 5984
          restserver:
            targetPort: 20001
            port: 20001 
          expressapi:
            targetPort: 3000
            port: 3000
          frontend:
            targetPort: 80
            port: 8080
          chaincode:
            name: "supplychain"
            version: "v1"
            maindirectory: "supplychain/cmd"
            repository:
              username: "bob-fly"          # Git Service user who has rights to check-in in all branches
              password: "19889012fsb"
              url: "github.com/hyperledger-labs/blockchain-automation-framework.git"
              branch: test
              path: "examples/supplychain-app/fabric/chaincode_rest_server/chaincode/"
            arguments: '\"init\",\"\"'
            endorsements: ""
      #variables for frontend application
      app:
        google_maps_api: "gmaps_key"